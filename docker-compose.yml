version: '3'

volumes:
  db-volume:
networks:
  app-network:
    driver: bridge

services:
  php:
    container_name: php_${APP_NAME}
    build: .docker/php
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    environment:
      XDEBUG_MODE: debug
    depends_on:
      - db
    networks:
      - app-network

  composer:
    container_name: composer_${APP_NAME}
    build: .docker/composer
    command: install --ignore-platform-reqs
    volumes:
      - ./:/var/www
    working_dir: /var/www
    depends_on:
      - db
      - php
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx_${APP_NAME}
    ports:
      - ${NGINX_HTTP_PORT}:80
      - ${NGINX_HTTPS_PORT}:443
    volumes:
      - ./:/var/www:cached
      - ./.docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./.docker/nginx/logs:/var/log/nginx
    depends_on:
      - php
    networks:
      - app-network

  redis:
    container_name: redis_${APP_NAME}
    image: redis:6.0.8-alpine
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - app-network

  db:
    container_name: db_${APP_NAME}
    image: postgres:13.2-alpine
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE}
      PGDATA: /var/lib/postgresql/data/db/
    volumes:
      - db-volume:/var/lib/postgresql/data
    networks:
      - app-network

  db_test:
    container_name: db_test_${APP_NAME}
    image: postgres:13.2-alpine
    ports:
      - ${DB_PORT}0:5432
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE}
    networks:
      - app-network
